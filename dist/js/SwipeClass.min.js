export class Swipe{constructor(t,i){if(this.swipeArea=document.getElementById(t),!this.swipeArea)throw new Error(`Element with id '${t}' not found.`);this.startX=0,this.startY=0,this.currentX=0,this.minY=0,this.maxY=0,this.touchThresholdX=150,this.touchThresholdY=80,this.swipeHandler=i,this.swipeArea.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),this.swipeArea.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),this.swipeArea.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.swipeElement=this.swipeArea,this.swipeElement.addEventListener("swipe",this.handleSwipe.bind(this))}handleTouchStart(t){this.startX=this.currentX=t.touches[0].clientX,this.startY=this.minY=this.maxY=t.touches[0].clientY}handleTouchMove(t){this.currentX=t.touches[0].clientX,this.minY=Math.min(this.minY,t.touches[0].clientY),this.maxY=Math.max(this.maxY,t.touches[0].clientY)}handleTouchEnd(t){if(!(this.startX&&this.currentX&&this.startY&&this.minY))return;const i=this.currentX-this.startX,e=this.maxY-this.minY;Math.abs(i)>this.touchThresholdX&&Math.abs(e)<this.touchThresholdY&&(i>0?this.fireSwipeEvent("swiperight"):this.fireSwipeEvent("swipeleft")),this.startX=this.currentX=void 0}fireSwipeEvent(t){const i=new CustomEvent("swipe",{detail:t});this.swipeElement.dispatchEvent(i)}handleSwipe(t){"function"==typeof this.swipeHandler&&this.swipeHandler(t.detail)}}