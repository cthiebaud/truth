export class Swipe{constructor(t,e){if(this.swipeArea=document.getElementById(t),!this.swipeArea)throw new Error(`Element with id '${t}' not found.`);this.startX=0,this.startY=0,this.currentX=0,this.currentY=0,this.touchThresholdX=120,this.touchThresholdY=50,this.swipeHandler=e,this.swipeArea.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),this.swipeArea.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),this.swipeArea.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.swipeElement=this.swipeArea,this.swipeElement.addEventListener("swipe",this.handleSwipe.bind(this))}handleTouchStart(t){this.startX=this.currentX=t.touches[0].clientX,this.startY=this.currentY=t.touches[0].clientY}handleTouchMove(t){this.currentX=t.touches[0].clientX,this.currentY=t.touches[0].clientY}handleTouchEnd(t){if(!(this.startX&&this.currentX&&this.startY&&this.currentY))return;const e=this.currentX-this.startX,s=this.currentY-this.startY;Math.abs(e)>this.touchThresholdX&&Math.abs(s)<this.touchThresholdY&&(e>0?this.fireSwipeEvent("swiperight"):this.fireSwipeEvent("swipeleft")),this.startX=this.currentX=void 0}fireSwipeEvent(t){const e=new CustomEvent("swipe",{detail:t});this.swipeElement.dispatchEvent(e)}handleSwipe(t){"function"==typeof this.swipeHandler&&this.swipeHandler(t.detail)}}