export class Swipe{constructor(e,t){if(this.swipeArea=document.getElementById(e),!this.swipeArea)throw new Error(`Element with id '${e}' not found.`);this.startX=0,this.currentX=0,this.swipeHandler=t,this.swipeArea.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!1}),this.swipeArea.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),this.swipeArea.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.swipeElement=this.swipeArea,this.swipeElement.addEventListener("swipe",this.handleSwipe.bind(this))}handleTouchStart(e){this.startX=e.touches[0].clientX}handleTouchMove(e){e.preventDefault(),this.currentX=e.touches[0].clientX}handleTouchEnd(e){const t=this.currentX-this.startX;Math.abs(t)>50&&(t>0?this.fireSwipeEvent("swiperight"):this.fireSwipeEvent("swipeleft"))}fireSwipeEvent(e){const t=new CustomEvent("swipe",{detail:e});this.swipeElement.dispatchEvent(t)}handleSwipe(e){"function"==typeof this.swipeHandler&&this.swipeHandler(e.detail)}}