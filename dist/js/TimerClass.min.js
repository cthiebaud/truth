import t from"https://cdn.jsdelivr.net/npm/tinycolor2@1.6.0/+esm";class i{constructor(t){this.file=t,this.arrayBuffer=null,this.soundBuffer=null,this.soundSource=null,this.audioContext=null}async load(){const t=await fetch(this.file);this.arrayBuffer=await t.arrayBuffer()}async decode(t){this.audioContext=t,this.soundBuffer=await this.audioContext.decodeAudioData(this.arrayBuffer.slice(0))}connect(){if(null==this.soundBuffer)return{start:()=>{}};const t=this.audioContext.createBufferSource();return t.buffer=this.soundBuffer,t.connect(this.audioContext.destination),t.onended=()=>{t.disconnect()},t}play(){null==this.soundSource?this.connect().start():this.soundSource.start()}stop(){null!=this.soundSource&&this.soundSource.stop()}}export class Timer{constructor(t,e,s,o,a,n){try{this.timerContainer=document.getElementById(e),this.timerElementPlaying=this.timerContainer.querySelector(".timer-playing"),this.timerElementNotPlaying=this.timerContainer.querySelector(".timer-not-playing"),this.ticks=0,this.innerCircle1=this.timerElementPlaying.querySelector("#innerCircle1"),this.innerCircle2=this.timerElementPlaying.querySelector("#innerCircle2"),this.radius1=this.innerCircle1.getAttribute("r"),this.radius2=this.innerCircle2.getAttribute("r"),this.circonf1=2*this.radius1*Math.PI,this.circonf2=2*this.radius2*Math.PI,this.radius=this.timerElementPlaying.width/4,this.centerX=this.timerElementPlaying.width/2,this.centerY=this.timerElementPlaying.height/2,this.timerId=null,this.audioContext=null,this.ticking=new i("/assets/audio/ticking.mp3"),this.coin=new i("/assets/audio/coin.mp3"),this.laughs=new i("/assets/audio/laughs-lower.mp3"),this.tada=new i("/assets/audio/tada.mp3"),this.fail=new i("/assets/audio/fail.mp3"),this.completed_with_errors=new i("/assets/audio/completed_with_errors.mp3"),this.boo=new i("/assets/audio/boo.mp3"),this.guitar=new i("/assets/audio/guitar-riff.mp3"),this.boredom=new i("/assets/audio/boredom.mp3"),this.totalTime=t,this.onTimerReady=s,this.onTimerTick=o,this.onTimerExpiredCallback=a,this.onTimerClosedCallback=n}catch(t){console.error(t)}}async loadResources(){await this.ticking.load(),await this.coin.load(),await this.laughs.load(),await this.tada.load(),await this.fail.load(),await this.completed_with_errors.load(),await this.boo.load(),await this.guitar.load(),await this.boredom.load(),this.onTimerReady&&this.onTimerReady()}initializeAudio(){return new Promise((async(t,i)=>{try{this.audioContext?console.warn("Audio context is already initialized"):this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.ticking&&(await this.ticking.decode(this.audioContext),this.ticking.soundSource=this.ticking.connect(),this.ticking.soundSource.onended=null,this.ticking.soundSource.loop=!0),await this.coin.decode(this.audioContext),await this.laughs.decode(this.audioContext),await this.tada.decode(this.audioContext),await this.fail.decode(this.audioContext),await this.completed_with_errors.decode(this.audioContext),await this.boo.decode(this.audioContext),await this.guitar.decode(this.audioContext),await this.boredom.decode(this.audioContext),t()}catch(t){console.error("Error initializing audio:",t),i(t)}}))}drawTimer(t){let i=(this.totalTime-t)/this.totalTime,e=i*this.circonf1,s=this.circonf1-e,o=i*this.circonf2,a=this.circonf2-o;innerCircle1.setAttribute("stroke-dasharray",`0 ${e} ${s}`),o-6>=0?(innerCircle2.setAttribute("stroke-dasharray",`0 3 ${o-6} ${a+3}`),innerCircle2.setAttribute("stroke-width",2)):innerCircle2.setAttribute("stroke-width",0)}updateTimer(t,i){const e=(t-i)/1e3,s=Math.max(this.totalTime-e,0);s>0?(this.drawTimer(s),this.timerId=requestAnimationFrame((t=>this.updateTimer(t,i)))):(this.ticking.stop(),clearInterval(this.showNumber),this.onTimerExpiredCallback?this.onTimerExpiredCallback():(this.stop(),this.close()))}start(t){t&&(this.totalTime=t),this.timerElementPlaying.style.display="block",this.timerElementNotPlaying.style.display="none",this.ticks=0,this.ticking.play();const i=performance.now();this.timerId=requestAnimationFrame((t=>this.updateTimer(t,i))),this.onTimerTick(this.totalTime,this.ticks),this.showNumber=setInterval((()=>{this.onTimerTick(this.totalTime,++this.ticks)}),1e3)}stop(){clearInterval(this.showNumber),cancelAnimationFrame(this.timerId),this.timerId=null,this.ticking.stop()}close(){this.audioContext?(this.audioContext.close().then((()=>{this.onTimerClosedCallback&&this.onTimerClosedCallback()})),this.audioContext=null):this.onTimerClosedCallback&&this.onTimerClosedCallback(),this.timerElementPlaying.style.display="none",this.timerElementNotPlaying.style.display="block"}}