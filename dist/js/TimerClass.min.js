export class Timer{constructor(t,i,e={}){try{this.timerContainer=document.getElementById(i),this.timerContainer.disabled=!1,this.timerElementPlaying=this.timerContainer.querySelector(".timer-playing"),this.timerElementNotPlaying=this.timerContainer.querySelector(".timer-not-playing"),this.ticks=0,this.innerCircle1=this.timerElementPlaying.querySelector("#innerCircle1"),this.innerCircle2=this.timerElementPlaying.querySelector("#innerCircle2"),this.radius1=this.innerCircle1.getAttribute("r"),this.radius2=this.innerCircle2.getAttribute("r"),this.circonf1=2*this.radius1*Math.PI,this.circonf2=2*this.radius2*Math.PI,this.radius=this.timerElementPlaying.width/4,this.centerX=this.timerElementPlaying.width/2,this.centerY=this.timerElementPlaying.height/2,this.timerId=null,this.totalTime=t,this.callbacks={onStart:()=>{},onTick:()=>{},onExpired:()=>{},onStop:()=>{},onClose:()=>{}},this.callbacks=Object.assign(this.callbacks,e)}catch(t){console.error(t)}}drawTimer(t){let i=(this.totalTime-t)/this.totalTime,e=i*this.circonf1,s=this.circonf1-e,r=i*this.circonf2,n=this.circonf2-r;innerCircle1.setAttribute("stroke-dasharray",`0 ${e} ${s}`),r-6>=0?(innerCircle2.setAttribute("stroke-dasharray",`0 3 ${r-6} ${n+3}`),innerCircle2.setAttribute("stroke-width",2)):innerCircle2.setAttribute("stroke-width",0)}updateTimer(t,i){const e=(t-i)/1e3,s=Math.max(this.totalTime-e,0);s>0?(this.drawTimer(s),this.timerId=requestAnimationFrame((t=>this.updateTimer(t,i)))):(clearInterval(this.showNumber),this.callbacks.onExpired())}start(t){t&&(this.totalTime=t),this.timerElementPlaying.style.display="block",this.timerElementNotPlaying.style.display="none",this.ticks=0;const i=performance.now();this.timerId=requestAnimationFrame((t=>this.updateTimer(t,i))),this.callbacks.onStart(),this.callbacks.onTick(this.totalTime,this.ticks),this.showNumber=setInterval((()=>{this.callbacks.onTick(this.totalTime,++this.ticks)}),1e3)}stop(){clearInterval(this.showNumber),cancelAnimationFrame(this.timerId),this.timerId=null,this.callbacks.onStop()}close(){this.audioContext?(this.audioContext.close().then((()=>{this.onTimerClosedCallback&&this.onTimerClosedCallback()})),this.audioContext=null):this.callbacks.onClose(),this.timerElementPlaying.style.display="none",this.timerElementNotPlaying.style.display="block"}}