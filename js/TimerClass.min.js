class Sound{constructor(t){this.file=t,this.arrayBuffer=null,this.soundBuffer=null,this.soundSource=null,this.audioContext=null}async load(){const t=await fetch(this.file);this.arrayBuffer=await t.arrayBuffer()}async decode(t){this.audioContext=t,this.soundBuffer=await this.audioContext.decodeAudioData(this.arrayBuffer.slice(0))}connect(){const t=this.audioContext.createBufferSource();return t.buffer=this.soundBuffer,t.connect(this.audioContext.destination),t.onended=()=>{t.disconnect()},t}play(){null==this.soundSource?this.connect().start():this.soundSource.start()}stop(){this.soundSource.stop()}}export class Timer{constructor(t,i,e,o){this.svg=document.getElementById(i),this.innerCircle1=this.svg.querySelector("#innerCircle1"),this.innerCircle2=this.svg.querySelector("#innerCircle2"),this.radius1=this.innerCircle1.getAttribute("r"),this.radius2=this.innerCircle2.getAttribute("r"),this.circonf1=2*this.radius1*Math.PI,this.circonf2=2*this.radius2*Math.PI,this.radius=this.svg.width/4,this.centerX=this.svg.width/2,this.centerY=this.svg.height/2,this.timerId=null,this.audioContext=null,this.ticking=new Sound("audio/ticking.mp3"),this.coin=new Sound("audio/coin.mp3"),this.laughs=new Sound("audio/laughs-lower.mp3"),this.tada=new Sound("audio/tada.mp3"),this.fail=new Sound("audio/fail.mp3"),this.completed_with_errors=new Sound("audio/completed_with_errors.mp3"),this.boo=new Sound("audio/boo.mp3"),this.totalTime=t,this.onTimerExpiredCallback=e,this.onTimerClosedCallback=o}async loadResources(){await this.ticking.load(),await this.coin.load(),await this.laughs.load(),await this.tada.load(),await this.fail.load(),await this.completed_with_errors.load(),await this.boo.load(),console.log("Sound sources loaded")}initializeAudio(){return new Promise((async(t,i)=>{try{this.audioContext?console.warn("Audio context is already initialized"):this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.ticking&&(await this.ticking.decode(this.audioContext),this.ticking.soundSource=this.ticking.connect(),this.ticking.soundSource.onended=null,this.ticking.soundSource.loop=!0),await this.coin.decode(this.audioContext),await this.laughs.decode(this.audioContext),await this.tada.decode(this.audioContext),await this.fail.decode(this.audioContext),await this.completed_with_errors.decode(this.audioContext),await this.boo.decode(this.audioContext),console.log("Audio context initialized successfully, sound sources connected"),t()}catch(t){console.error("Error initializing audio:",t),i(t)}}))}clearTimer(){this.svg.style.display="none",this.innerCircle2.setAttribute("stroke-width",0)}drawTimer(t){let i=(this.totalTime-t)/this.totalTime,e=i*this.circonf1,o=this.circonf1-e,s=i*this.circonf2,n=this.circonf2-s;innerCircle1.setAttribute("stroke-dasharray",`0 ${e} ${o}`),s-6>=0&&(innerCircle2.setAttribute("stroke-dasharray",`0 3 ${s-6} ${n+3}`),innerCircle2.setAttribute("stroke-width",2))}updateTimer(t,i){const e=(t-i)/1e3,o=Math.max(this.totalTime-e,0);o>0?(this.drawTimer(o),this.timerId=requestAnimationFrame((t=>this.updateTimer(t,i)))):(this.ticking.stop(),this.onTimerExpiredCallback?this.onTimerExpiredCallback():(this.stop(),this.close()))}start(){this.svg.style.display="block",this.ticking.play();const t=performance.now();this.timerId=requestAnimationFrame((i=>this.updateTimer(i,t))),console.log("timer started")}stop(){this.clearTimer(),cancelAnimationFrame(this.timerId),this.timerId=null,this.ticking.stop(),console.log("timer stopped")}close(){this.audioContext?(console.log("closing audioContext..."),this.audioContext.close().then((()=>{console.log("Audio context closed and nullified"),this.onTimerClosedCallback&&this.onTimerClosedCallback()})),this.audioContext=null):this.onTimerClosedCallback&&this.onTimerClosedCallback(),console.log("timer closed")}}